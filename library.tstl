@import library

# Pool definitions
pool: <library> 1 OPAQUE
pool: <book> 4 OPAQUE
pool: <str> 4
pool: <int> 4

# Initialization
<library> := library.Library()

# Generators for test data
<str> := str(hash(GEN_INT))
<int> := hash(GEN_INT)

# Book definition
<book> := library.Book(
    "Book_" + <str>, 
    "Author_" + <str>, 
    "ISBN_" + <str>, 
    1900 + (<int> % 124), 
    float(<int> % 1000)
)

# Pool definition for actions
pool: action == [
    <library>.add_book(<book>),
    len(<library>.books) > 0 -> <library>.remove_book(<library>.books[0].isbn),
    len(<library>.books) > 0 -> <library>.search_by_title(<library>.books[0].title),
    len(<library>.books) > 0 -> <library>.search_by_author(<library>.books[0].author),
    len(<library>.books) > 0 -> <library>.sort_by_price(),
    len(<library>.books) > 0 -> <library>.sort_by_year(),
    len(<library>.books) > 0 -> <library>.display_book_by_isbn(<library>.books[0].isbn),
    len(<library>.books) > 0 -> <library>.clear_books()
]

# Precondition definition
def pre_action():
    return True

# Post-condition definition
def post_action():
    return True

# Validity check
def valid(s):
    return True
